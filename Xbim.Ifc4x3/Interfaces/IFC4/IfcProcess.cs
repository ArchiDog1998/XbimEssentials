// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;
using Xbim.Common;

//## Custom using statements
//##

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc4x3.Kernel
{
	public partial class @IfcProcess : IIfcProcess
	{

		[CrossSchemaAttribute(typeof(IIfcProcess), 6)]
		Ifc4.MeasureResource.IfcIdentifier? IIfcProcess.Identification 
		{ 
			get
			{
				if (!Identification.HasValue) return null;
				return new Ifc4.MeasureResource.IfcIdentifier(Identification.Value);
			} 
			set
			{
				Identification = value.HasValue ? 
					new MeasureResource.IfcIdentifier(value.Value) :  
					 new MeasureResource.IfcIdentifier?() ;
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcProcess), 7)]
		Ifc4.MeasureResource.IfcText? IIfcProcess.LongDescription 
		{ 
			get
			{
				if (!LongDescription.HasValue) return null;
				return new Ifc4.MeasureResource.IfcText(LongDescription.Value);
			} 
			set
			{
				LongDescription = value.HasValue ? 
					new MeasureResource.IfcText(value.Value) :  
					 new MeasureResource.IfcText?() ;
				
			}
		}
		IEnumerable<IIfcRelSequence> IIfcProcess.IsPredecessorTo 
		{ 
			get
			{
				return Model.Instances.Where<IIfcRelSequence>(e => (e.RelatingProcess as IfcProcess) == this, "RelatingProcess", this);
			} 
		}
		IEnumerable<IIfcRelSequence> IIfcProcess.IsSuccessorFrom 
		{ 
			get
			{
				return Model.Instances.Where<IIfcRelSequence>(e => (e.RelatedProcess as IfcProcess) == this, "RelatedProcess", this);
			} 
		}
		IEnumerable<IIfcRelAssignsToProcess> IIfcProcess.OperatesOn 
		{ 
			get
			{
				return Model.Instances.Where<IIfcRelAssignsToProcess>(e => (e.RelatingProcess as IfcProcess) == this, "RelatingProcess", this);
			} 
		}
	//## Custom code
	//##
	}
}