// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;
using Xbim.Common;

//## Custom using statements
//##

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc4x3.ProcessExtension
{
	public partial class @IfcWorkControl : IIfcWorkControl
	{

		[CrossSchemaAttribute(typeof(IIfcWorkControl), 7)]
		Ifc4.DateTimeResource.IfcDateTime IIfcWorkControl.CreationDate 
		{ 
			get
			{
				return new Ifc4.DateTimeResource.IfcDateTime(CreationDate);
			} 
			set
			{
				CreationDate = new DateTimeResource.IfcDateTime(value);
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcWorkControl), 8)]
		IItemSet<IIfcPerson> IIfcWorkControl.Creators 
		{ 
			get
			{
			
				return new Common.Collections.ProxyItemSet<ActorResource.IfcPerson, IIfcPerson>(Creators);
			} 
		}

		[CrossSchemaAttribute(typeof(IIfcWorkControl), 9)]
		Ifc4.MeasureResource.IfcLabel? IIfcWorkControl.Purpose 
		{ 
			get
			{
				if (!Purpose.HasValue) return null;
				return new Ifc4.MeasureResource.IfcLabel(Purpose.Value);
			} 
			set
			{
				Purpose = value.HasValue ? 
					new MeasureResource.IfcLabel(value.Value) :  
					 new MeasureResource.IfcLabel?() ;
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcWorkControl), 10)]
		Ifc4.DateTimeResource.IfcDuration? IIfcWorkControl.Duration 
		{ 
			get
			{
				if (!Duration.HasValue) return null;
				return new Ifc4.DateTimeResource.IfcDuration(Duration.Value);
			} 
			set
			{
				Duration = value.HasValue ? 
					new DateTimeResource.IfcDuration(value.Value) :  
					 new DateTimeResource.IfcDuration?() ;
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcWorkControl), 11)]
		Ifc4.DateTimeResource.IfcDuration? IIfcWorkControl.TotalFloat 
		{ 
			get
			{
				if (!TotalFloat.HasValue) return null;
				return new Ifc4.DateTimeResource.IfcDuration(TotalFloat.Value);
			} 
			set
			{
				TotalFloat = value.HasValue ? 
					new DateTimeResource.IfcDuration(value.Value) :  
					 new DateTimeResource.IfcDuration?() ;
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcWorkControl), 12)]
		Ifc4.DateTimeResource.IfcDateTime IIfcWorkControl.StartTime 
		{ 
			get
			{
				return new Ifc4.DateTimeResource.IfcDateTime(StartTime);
			} 
			set
			{
				StartTime = new DateTimeResource.IfcDateTime(value);
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcWorkControl), 13)]
		Ifc4.DateTimeResource.IfcDateTime? IIfcWorkControl.FinishTime 
		{ 
			get
			{
				if (!FinishTime.HasValue) return null;
				return new Ifc4.DateTimeResource.IfcDateTime(FinishTime.Value);
			} 
			set
			{
				FinishTime = value.HasValue ? 
					new DateTimeResource.IfcDateTime(value.Value) :  
					 new DateTimeResource.IfcDateTime?() ;
				
			}
		}
	//## Custom code
	//##
	}
}