// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;
using Xbim.Common;

//## Custom using statements
//##

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc4x3.SharedComponentElements
{
	public partial class @IfcDiscreteAccessoryType : IIfcDiscreteAccessoryType
	{

		[CrossSchemaAttribute(typeof(IIfcDiscreteAccessoryType), 10)]
		Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum IIfcDiscreteAccessoryType.PredefinedType 
		{ 
			get
			{
				//## Custom code to handle enumeration of PredefinedType
				//##
				switch (PredefinedType)
				{
					case IfcDiscreteAccessoryTypeEnum.ANCHORPLATE:
						return Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.ANCHORPLATE;
					case IfcDiscreteAccessoryTypeEnum.BRACKET:
						return Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.BRACKET;
					case IfcDiscreteAccessoryTypeEnum.SHOE:
						return Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.SHOE;
					case IfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE:
						//## Handle translation of EXPANSION_JOINT_DEVICE member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of EXPANSION_JOINT_DEVICE member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.BIRDPROTECTION:
						//## Handle translation of BIRDPROTECTION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of BIRDPROTECTION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.CABLEARRANGER:
						//## Handle translation of CABLEARRANGER member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of CABLEARRANGER member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.INSULATOR:
						//## Handle translation of INSULATOR member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of INSULATOR member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.LOCK:
						//## Handle translation of LOCK member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of LOCK member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.TENSIONINGEQUIPMENT:
						//## Handle translation of TENSIONINGEQUIPMENT member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of TENSIONINGEQUIPMENT member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.RAILPAD:
						//## Handle translation of RAILPAD member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of RAILPAD member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.SLIDINGCHAIR:
						//## Handle translation of SLIDINGCHAIR member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of SLIDINGCHAIR member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.PANEL_STRENGTHENING:
						//## Handle translation of PANEL_STRENGTHENING member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of PANEL_STRENGTHENING member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.RAILBRACE:
						//## Handle translation of RAILBRACE member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of RAILBRACE member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.ELASTIC_CUSHION:
						//## Handle translation of ELASTIC_CUSHION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of ELASTIC_CUSHION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.SOUNDABSORPTION:
						//## Handle translation of SOUNDABSORPTION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of SOUNDABSORPTION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.RAIL_LUBRICATION:
						//## Handle translation of RAIL_LUBRICATION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of RAIL_LUBRICATION member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.RAIL_MECHANICAL_EQUIPMENT:
						//## Handle translation of RAIL_MECHANICAL_EQUIPMENT member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						//TODO: Handle translation of RAIL_MECHANICAL_EQUIPMENT member from IfcDiscreteAccessoryTypeEnum in property PredefinedType
						throw new System.NotImplementedException();
						//##
					case IfcDiscreteAccessoryTypeEnum.USERDEFINED:
						//## Optional custom handling of PredefinedType == .USERDEFINED. 
						//##
						return Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.USERDEFINED;
					case IfcDiscreteAccessoryTypeEnum.NOTDEFINED:
						return Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.NOTDEFINED;
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
			} 
			set
			{
				//## Custom code to handle setting of enumeration of PredefinedType
				//##
				switch (value)
				{
					case Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.ANCHORPLATE:
						PredefinedType = IfcDiscreteAccessoryTypeEnum.ANCHORPLATE;
						return;
					case Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.BRACKET:
						PredefinedType = IfcDiscreteAccessoryTypeEnum.BRACKET;
						return;
					case Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.SHOE:
						PredefinedType = IfcDiscreteAccessoryTypeEnum.SHOE;
						return;
					case Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.USERDEFINED:
						PredefinedType = IfcDiscreteAccessoryTypeEnum.USERDEFINED;
						return;
					case Ifc4.Interfaces.IfcDiscreteAccessoryTypeEnum.NOTDEFINED:
						PredefinedType = IfcDiscreteAccessoryTypeEnum.NOTDEFINED;
						return;
					default:
						throw new System.ArgumentOutOfRangeException();
				}
				
			}
		}
	//## Custom code
	//##
	}
}