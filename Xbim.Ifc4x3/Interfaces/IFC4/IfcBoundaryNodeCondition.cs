// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;
using Xbim.Common;

//## Custom using statements
//##

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc4x3.StructuralLoadResource
{
	public partial class @IfcBoundaryNodeCondition : IIfcBoundaryNodeCondition
	{

		[CrossSchemaAttribute(typeof(IIfcBoundaryNodeCondition), 2)]
		IIfcTranslationalStiffnessSelect IIfcBoundaryNodeCondition.TranslationalStiffnessX 
		{ 
			get
			{
				if (TranslationalStiffnessX == null) return null;
				if (TranslationalStiffnessX is MeasureResource.IfcBoolean) 
					return new Ifc4.MeasureResource.IfcBoolean((MeasureResource.IfcBoolean)TranslationalStiffnessX);
				if (TranslationalStiffnessX is MeasureResource.IfcLinearStiffnessMeasure) 
					return new Ifc4.MeasureResource.IfcLinearStiffnessMeasure((MeasureResource.IfcLinearStiffnessMeasure)TranslationalStiffnessX);
				return null;
			} 
			set
			{
				if (value == null)
				{
					TranslationalStiffnessX = null;
					return;
				}	
				if (value is Ifc4.MeasureResource.IfcBoolean) 
				{
					TranslationalStiffnessX = new MeasureResource.IfcBoolean((Ifc4.MeasureResource.IfcBoolean)value);
					return;
				}
				if (value is Ifc4.MeasureResource.IfcLinearStiffnessMeasure) 
				{
					TranslationalStiffnessX = new MeasureResource.IfcLinearStiffnessMeasure((Ifc4.MeasureResource.IfcLinearStiffnessMeasure)value);
					return;
				}
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcBoundaryNodeCondition), 3)]
		IIfcTranslationalStiffnessSelect IIfcBoundaryNodeCondition.TranslationalStiffnessY 
		{ 
			get
			{
				if (TranslationalStiffnessY == null) return null;
				if (TranslationalStiffnessY is MeasureResource.IfcBoolean) 
					return new Ifc4.MeasureResource.IfcBoolean((MeasureResource.IfcBoolean)TranslationalStiffnessY);
				if (TranslationalStiffnessY is MeasureResource.IfcLinearStiffnessMeasure) 
					return new Ifc4.MeasureResource.IfcLinearStiffnessMeasure((MeasureResource.IfcLinearStiffnessMeasure)TranslationalStiffnessY);
				return null;
			} 
			set
			{
				if (value == null)
				{
					TranslationalStiffnessY = null;
					return;
				}	
				if (value is Ifc4.MeasureResource.IfcBoolean) 
				{
					TranslationalStiffnessY = new MeasureResource.IfcBoolean((Ifc4.MeasureResource.IfcBoolean)value);
					return;
				}
				if (value is Ifc4.MeasureResource.IfcLinearStiffnessMeasure) 
				{
					TranslationalStiffnessY = new MeasureResource.IfcLinearStiffnessMeasure((Ifc4.MeasureResource.IfcLinearStiffnessMeasure)value);
					return;
				}
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcBoundaryNodeCondition), 4)]
		IIfcTranslationalStiffnessSelect IIfcBoundaryNodeCondition.TranslationalStiffnessZ 
		{ 
			get
			{
				if (TranslationalStiffnessZ == null) return null;
				if (TranslationalStiffnessZ is MeasureResource.IfcBoolean) 
					return new Ifc4.MeasureResource.IfcBoolean((MeasureResource.IfcBoolean)TranslationalStiffnessZ);
				if (TranslationalStiffnessZ is MeasureResource.IfcLinearStiffnessMeasure) 
					return new Ifc4.MeasureResource.IfcLinearStiffnessMeasure((MeasureResource.IfcLinearStiffnessMeasure)TranslationalStiffnessZ);
				return null;
			} 
			set
			{
				if (value == null)
				{
					TranslationalStiffnessZ = null;
					return;
				}	
				if (value is Ifc4.MeasureResource.IfcBoolean) 
				{
					TranslationalStiffnessZ = new MeasureResource.IfcBoolean((Ifc4.MeasureResource.IfcBoolean)value);
					return;
				}
				if (value is Ifc4.MeasureResource.IfcLinearStiffnessMeasure) 
				{
					TranslationalStiffnessZ = new MeasureResource.IfcLinearStiffnessMeasure((Ifc4.MeasureResource.IfcLinearStiffnessMeasure)value);
					return;
				}
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcBoundaryNodeCondition), 5)]
		IIfcRotationalStiffnessSelect IIfcBoundaryNodeCondition.RotationalStiffnessX 
		{ 
			get
			{
				if (RotationalStiffnessX == null) return null;
				if (RotationalStiffnessX is MeasureResource.IfcBoolean) 
					return new Ifc4.MeasureResource.IfcBoolean((MeasureResource.IfcBoolean)RotationalStiffnessX);
				if (RotationalStiffnessX is MeasureResource.IfcRotationalStiffnessMeasure) 
					return new Ifc4.MeasureResource.IfcRotationalStiffnessMeasure((MeasureResource.IfcRotationalStiffnessMeasure)RotationalStiffnessX);
				return null;
			} 
			set
			{
				if (value == null)
				{
					RotationalStiffnessX = null;
					return;
				}	
				if (value is Ifc4.MeasureResource.IfcBoolean) 
				{
					RotationalStiffnessX = new MeasureResource.IfcBoolean((Ifc4.MeasureResource.IfcBoolean)value);
					return;
				}
				if (value is Ifc4.MeasureResource.IfcRotationalStiffnessMeasure) 
				{
					RotationalStiffnessX = new MeasureResource.IfcRotationalStiffnessMeasure((Ifc4.MeasureResource.IfcRotationalStiffnessMeasure)value);
					return;
				}
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcBoundaryNodeCondition), 6)]
		IIfcRotationalStiffnessSelect IIfcBoundaryNodeCondition.RotationalStiffnessY 
		{ 
			get
			{
				if (RotationalStiffnessY == null) return null;
				if (RotationalStiffnessY is MeasureResource.IfcBoolean) 
					return new Ifc4.MeasureResource.IfcBoolean((MeasureResource.IfcBoolean)RotationalStiffnessY);
				if (RotationalStiffnessY is MeasureResource.IfcRotationalStiffnessMeasure) 
					return new Ifc4.MeasureResource.IfcRotationalStiffnessMeasure((MeasureResource.IfcRotationalStiffnessMeasure)RotationalStiffnessY);
				return null;
			} 
			set
			{
				if (value == null)
				{
					RotationalStiffnessY = null;
					return;
				}	
				if (value is Ifc4.MeasureResource.IfcBoolean) 
				{
					RotationalStiffnessY = new MeasureResource.IfcBoolean((Ifc4.MeasureResource.IfcBoolean)value);
					return;
				}
				if (value is Ifc4.MeasureResource.IfcRotationalStiffnessMeasure) 
				{
					RotationalStiffnessY = new MeasureResource.IfcRotationalStiffnessMeasure((Ifc4.MeasureResource.IfcRotationalStiffnessMeasure)value);
					return;
				}
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcBoundaryNodeCondition), 7)]
		IIfcRotationalStiffnessSelect IIfcBoundaryNodeCondition.RotationalStiffnessZ 
		{ 
			get
			{
				if (RotationalStiffnessZ == null) return null;
				if (RotationalStiffnessZ is MeasureResource.IfcBoolean) 
					return new Ifc4.MeasureResource.IfcBoolean((MeasureResource.IfcBoolean)RotationalStiffnessZ);
				if (RotationalStiffnessZ is MeasureResource.IfcRotationalStiffnessMeasure) 
					return new Ifc4.MeasureResource.IfcRotationalStiffnessMeasure((MeasureResource.IfcRotationalStiffnessMeasure)RotationalStiffnessZ);
				return null;
			} 
			set
			{
				if (value == null)
				{
					RotationalStiffnessZ = null;
					return;
				}	
				if (value is Ifc4.MeasureResource.IfcBoolean) 
				{
					RotationalStiffnessZ = new MeasureResource.IfcBoolean((Ifc4.MeasureResource.IfcBoolean)value);
					return;
				}
				if (value is Ifc4.MeasureResource.IfcRotationalStiffnessMeasure) 
				{
					RotationalStiffnessZ = new MeasureResource.IfcRotationalStiffnessMeasure((Ifc4.MeasureResource.IfcRotationalStiffnessMeasure)value);
					return;
				}
				
			}
		}
	//## Custom code
	//##
	}
}