// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;
using Xbim.Common;

//## Custom using statements
//##

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc4x3.GeometricConstraintResource
{
	public partial class @IfcConnectionVolumeGeometry : IIfcConnectionVolumeGeometry
	{

		[CrossSchemaAttribute(typeof(IIfcConnectionVolumeGeometry), 1)]
		IIfcSolidOrShell IIfcConnectionVolumeGeometry.VolumeOnRelatingElement 
		{ 
			get
			{
				if (VolumeOnRelatingElement == null) return null;
				var ifcclosedshell = VolumeOnRelatingElement as TopologyResource.IfcClosedShell;
				if (ifcclosedshell != null) 
					return ifcclosedshell;
				var ifcsolidmodel = VolumeOnRelatingElement as GeometricModelResource.IfcSolidModel;
				if (ifcsolidmodel != null) 
					return ifcsolidmodel;
				return null;
			} 
			set
			{
				if (value == null)
				{
					VolumeOnRelatingElement = null;
					return;
				}	
				var ifcclosedshell = value as TopologyResource.IfcClosedShell;
				if (ifcclosedshell != null) 
				{
					VolumeOnRelatingElement = ifcclosedshell;
					return;
				}
				var ifcsolidmodel = value as GeometricModelResource.IfcSolidModel;
				if (ifcsolidmodel != null) 
				{
					VolumeOnRelatingElement = ifcsolidmodel;
					return;
				}
				
			}
		}

		[CrossSchemaAttribute(typeof(IIfcConnectionVolumeGeometry), 2)]
		IIfcSolidOrShell IIfcConnectionVolumeGeometry.VolumeOnRelatedElement 
		{ 
			get
			{
				if (VolumeOnRelatedElement == null) return null;
				var ifcclosedshell = VolumeOnRelatedElement as TopologyResource.IfcClosedShell;
				if (ifcclosedshell != null) 
					return ifcclosedshell;
				var ifcsolidmodel = VolumeOnRelatedElement as GeometricModelResource.IfcSolidModel;
				if (ifcsolidmodel != null) 
					return ifcsolidmodel;
				return null;
			} 
			set
			{
				if (value == null)
				{
					VolumeOnRelatedElement = null;
					return;
				}	
				var ifcclosedshell = value as TopologyResource.IfcClosedShell;
				if (ifcclosedshell != null) 
				{
					VolumeOnRelatedElement = ifcclosedshell;
					return;
				}
				var ifcsolidmodel = value as GeometricModelResource.IfcSolidModel;
				if (ifcsolidmodel != null) 
				{
					VolumeOnRelatedElement = ifcsolidmodel;
					return;
				}
				
			}
		}
	//## Custom code
	//##
	}
}